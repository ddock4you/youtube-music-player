{"version":3,"sources":["components/SearchMusicItem/SearchMusicItemPresenter.js","components/SearchMusicItem/index.js","components/SearchMusicItem/SearchMusicItemContainer.js","components/SearchMusic/SearchMusicPresenter.js","components/SearchMusic/index.js","components/SearchMusic/SearchMusicContainer.js","components/Header/HeaderPresenter.js","components/Header/index.js","components/Music/MusicPresenter.js","components/Music/index.js","components/Music/MusicContainer.js","components/MusicList/MusicListPresenter.js","components/MusicList/index.js","components/MusicList/MusicListContainer.js","components/InputMusic/InputMusicPresenter.js","components/InputMusic/index.js","components/InputMusic/InputMusicContainer.js","lib/Duration/index.js","components/NowPlaying/NowPlayingPresenter.js","components/NowPlaying/index.js","components/NowPlaying/NowPlayingContainer.js","Routes/NowList/index.js","lib/api.js","modules/defaultMusicListData.js","components/AppLayout.js","index.js"],"names":["SearchMusicItemPresenter","jacket","title","artist","id","addSearchItem","className","onClick","src","url","alt","SearchMusicItemContainer","getMovieInfo","videoID","alert","SearchMusicPresenter","onSubmitSearch","searchValue","onChangeSearch","searchList","openSearch","isSearch","searchInput","useRef","useEffect","current","focus","onSubmit","type","value","onChange","placeholder","ref","length","map","item","key","videoId","snippet","thumbnails","default","channelTitle","SearchMusicContainer","useState","setSearchValue","setSearchList","setIsSearch","optionParams","q","part","process","maxResults","regionCode","videoDuration","encodeURI","searchUrl","option","substr","e","a","preventDefault","axios","get","searchResult","console","log","data","status","items","target","dotenv","config","HeaderPresenter","icon","faSearch","SearchMusic","href","rel","faGithub","faBlog","faProductHunt","MusicPresenter","musicList","deleteMusicList","isPlaying","clickPlayMusic","playingMusicIndex","music","index","draggableId","String","provided","innerRef","draggableProps","dragHandleProps","bigJacket","faPlay","faPause","singer","duration","faTimes","stopPropagation","MusicContainer","setIsPlaying","nowPlayingMusic","setNowPlayingMusic","setCover","findIndex","find","MusicListPresenter","onDragEnd","droppableId","droppableProps","Music","MusicListContainer","setMusicList","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","InputMusicPresenter","inputUrl","onChangeUrl","faPlus","InputMusicContainer","getMovieinfo","setUrl","trim","includes","split","Duration","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","format","string","slice","NowPlayingPresenter","mute","volume","handleDuration","player","handlePlay","handleProgress","played","handleSeekChange","handleSeekMouseUp","handlePrevPlay","handleNextPlay","handlePlayMusic","handleMute","handleVolumeChange","onDuration","playing","onPlay","onProgress","step","minValue","maxValue","onChangeComplete","faBackward","faStepForward","faVolumeMute","faVolumeUp","faVolumeDown","min","max","NowPlayingContainer","setMute","setVolume","beforeVolume","setBeforeVolume","setDuration","setPlayed","state","parseFloat","seekTo","NowList","cover","InputMusic","NowPlaying","getVideo","MusicListData","base","name","App","storageMusicList","localStorage","getItem","JSON","parse","setItem","stringify","addMusic","addMusicList","concat","video","contentDetails","valueOf","youtubeDuration","maxres","standard","high","medium","error","selectedMusic","deleteMusic","filter","ReactDOM","render","document","getElementById"],"mappings":"4SA4BeA,G,YAzBkB,SAAC,GAM3B,IALHC,EAKE,EALFA,OACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,GACAC,EACE,EADFA,cAEA,OACI,yBACIC,UAAU,oBACVC,QAAS,WACLF,EAAcD,KAGlB,uBAAGE,UAAU,gCACT,yBAAKE,IAAKP,EAAOQ,IAAKC,IAAKR,KAE/B,yBAAKI,UAAU,2BACX,uBAAGA,UAAU,kCAAkCJ,GAC/C,uBAAGI,UAAU,mCAAmCH,OCpBjDQ,ECCS,SAAC,GAAiD,IAA/CV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,GAAIQ,EAAmB,EAAnBA,aAMlD,OACI,kBAAC,EAAD,CACIX,OAAQA,EACRC,MAAOA,EACPC,OAAQA,EACRC,GAAIA,EACJC,cAXc,SAACQ,GACnBC,MAAMD,GACND,EAAaC,OC+CNE,EAjDc,SAAC,GAQvB,IAPHH,EAOE,EAPFA,aACAI,EAME,EANFA,eACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,eACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,WACAC,EACE,EADFA,SAEMC,EAAcC,iBAAO,MAI3B,OAHAC,qBAAU,WACNJ,GAAcE,EAAYG,QAAQC,UACnC,CAACN,EAAYC,IAEZ,yBAAKf,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMqB,SAAUX,GACZ,2BACIY,KAAK,OACLC,MAAOZ,EACPa,SAAUZ,EACVa,YAAY,eACZC,IAAKV,IAET,4BAAQM,KAAK,aAGpBP,GACG,yBAAKf,UAAU,uBACY,IAAtBa,EAAWc,OACRd,EAAWe,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CACIC,IAAKD,EAAK/B,GAAGiC,QACbjC,GAAI+B,EAAK/B,GAAGiC,QACZpC,OAAQkC,EAAKG,QAAQC,WAAWC,QAChCtC,MAAOiC,EAAKG,QAAQpC,MACpBC,OAAQgC,EAAKG,QAAQG,aACrB7B,aAAcA,OAItB,uBAAGN,UAAU,WAAb,+DC3CToC,ECGc,SAAC,GAAkC,IAAhC9B,EAA+B,EAA/BA,aAAcQ,EAAiB,EAAjBA,WAAiB,EACrBuB,mBAAS,IADY,mBACpD1B,EADoD,KACvC2B,EADuC,OAEvBD,mBAAS,IAFc,mBAEpDxB,EAFoD,KAExC0B,EAFwC,OAG3BF,oBAAS,GAHkB,mBAGpDtB,EAHoD,KAG1CyB,EAH0C,KAMrDC,EAAe,CACjBC,EAAG/B,EACHgC,KAAM,UACNb,IAAKc,0CACLtB,KAAM,QACNuB,WAAY,GACZC,WAAY,KACZC,cAAe,SAInBN,EAAaC,EAAIM,UAAUP,EAAaC,GAExC,IAAIO,EAAY,gDAChB,IAAK,IAAIC,KAAUT,EACfQ,GAAaC,EAAS,IAAMT,EAAaS,GAAU,IAIvDD,EAAYA,EAAUE,OAAO,EAAGF,EAAUtB,OAAS,GAEnD,IAIMjB,EAAc,uCAAG,WAAO0C,GAAP,eAAAC,EAAA,yDACnBD,EAAEE,iBACkB,KAAhB3C,EAFe,uBAGfH,MAAM,kEAHS,mDAOY+C,IAAMC,IAAIP,GAPtB,OAOTQ,EAPS,OAQfC,QAAQC,IAAIF,EAAaG,MAEG,MAAxBH,EAAaI,QACbtB,EAAckB,EAAaG,KAAKE,OAEpCtB,GAAY,GAbG,sIAAH,sDAmBpB,OACI,kBAAC,EAAD,CACIlC,aAAcA,EACdI,eAAgBA,EAChBC,YAAaA,EACbC,eA5Be,SAACwC,GACpBd,EAAec,EAAEW,OAAOxC,QA4BpBV,WAAYA,EACZC,WAAYA,EACZC,SAAUA,KCrDtBiD,IAAOC,SAEP,ICVeC,EDUA,SAAC,GAAsB,IAApB5D,EAAmB,EAAnBA,aAAmB,GACbW,iBAAO,MACSoB,oBAAS,IAFZ,mBAE1BvB,EAF0B,UAIjC,OACI,gCACI,wBAAId,UAAU,QACV,yBAAKE,IAAI,wCAAwCE,IAAI,kBAEzD,yBAAKJ,UAAU,QACX,4BACI,4BACI,4BACIsB,KAAK,SACLrB,QAAS,WAELO,MAAM,2CAGV,kBAAC,IAAD,CAAiB2D,KAAMC,MAP3B,iCAUCtD,GACG,kBAACuD,EAAD,CACI/D,aAAcA,EACdQ,WAAYA,OAMhC,yBAAKd,UAAU,aACX,uBACIsE,KAAK,oDACLP,OAAO,SACPQ,IAAI,uBAEJ,kBAAC,IAAD,CAAiBJ,KAAMK,OAE3B,uBACIF,KAAK,iCACLP,OAAO,SACPQ,IAAI,uBAEJ,kBAAC,IAAD,CAAiBJ,KAAMM,OAE3B,uBACIH,KAAK,8BACLP,OAAO,SACPQ,IAAI,uBAEJ,kBAAC,IAAD,CAAiBJ,KAAMO,U,QEgB5BC,EA1EQ,SAAC,GAMjB,IALHC,EAKE,EALFA,UACAC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,eACAC,EACE,EADFA,kBAEA,OACI,oCACKJ,EAAUhD,KAAI,SAACqD,EAAOC,GAAR,OACX,kBAAC,IAAD,CACIpD,IAAKmD,EAAMnF,GACXoF,MAAOA,EACPC,YAAaC,OAAOH,EAAMnF,MAEzB,SAACuF,GAAD,OACG,uCACIrF,UACI,UACCkF,IAAUF,GAAqBF,EAC1B,UACAI,IAAUF,GAAsBF,EAEhC,GADA,QAGV7E,QAAS,WACL8E,EAAeE,EAAMnD,MAEzBA,IAAKmD,EAAMnF,GACX4B,IAAK2D,EAASC,UACVD,EAASE,eACTF,EAASG,iBAEb,yBAAKxF,UAAU,iBACX,2BACI,yBACIE,IAAK+E,EAAMQ,UACXrF,IAAK6E,EAAMrF,QAEdkF,EACG,kBAAC,IAAD,CAAiBX,KAAMuB,MAEvB,kBAAC,IAAD,CAAiBvB,KAAMwB,QAInC,yBAAK3F,UAAU,eACX,yBAAKA,UAAU,sBACViF,EAAMrF,OAEX,yBAAKI,UAAU,uBACViF,EAAMW,SAGf,yBAAK5F,UAAU,mBACViF,EAAMY,UAEX,yBAAK7F,UAAU,iBACX,kBAAC,IAAD,CACImE,KAAM2B,IACN7F,QAAS,SAACmD,GACNA,EAAE2C,kBACFlB,EAAgBI,EAAMnD,kBCjE/CkE,ECCQ,SAAC,GAQjB,IAPHpB,EAOE,EAPFA,UACAC,EAME,EANFA,gBACAC,EAKE,EALFA,UACAmB,EAIE,EAJFA,aACAC,EAGE,EAHFA,gBACAC,EAEE,EAFFA,mBACAC,EACE,EADFA,SAQMpB,EAAoBJ,EAAUyB,WAChC,SAACxE,GAAD,OAAUA,EAAKC,MAAQoE,EAAgBpE,OAG3C,OACI,kBAAC,EAAD,CACI8C,UAAWA,EACXC,gBAAiBA,EACjBC,UAAWA,EACXC,eAfe,SAACjD,GACpBqE,EAAmBvB,EAAU0B,MAAK,SAACzE,GAAD,OAAUA,EAAKC,MAAQA,MACzDsE,EAASxB,EAAU0B,MAAK,SAACzE,GAAD,OAAUA,EAAKC,MAAQA,KAAK2D,WACpDQ,GAAa,IAaTjB,kBAAmBA,KCiBhBuB,G,MAvCY,SAAC,GASrB,IARH3B,EAQE,EARFA,UACAC,EAOE,EAPFA,gBACAqB,EAME,EANFA,gBACAC,EAKE,EALFA,mBACAC,EAIE,EAJFA,SACAtB,EAGE,EAHFA,UACAmB,EAEE,EAFFA,aACAO,EACE,EADFA,UAEA,OACI,yBAAKxG,UAAU,cACX,uBAAGA,UAAU,qBAAb,4BACA,kBAAC,IAAD,CAAiBwG,UAAWA,GACxB,kBAAC,IAAD,CAAWC,YAAY,cAClB,SAACpB,GAAD,OACG,yCACQA,EAASqB,eADjB,CAEIhF,IAAK2D,EAASC,SACdtF,UAAU,qBAEV,kBAAC2G,EAAD,CACI/B,UAAWA,EACXC,gBAAiBA,EACjBC,UAAWA,EACXmB,aAAcA,EACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,SAAUA,IAEbf,EAAS5D,oBClCvBmF,ECCG,SAAC,GASZ,IARHhC,EAQE,EARFA,UACAiC,EAOE,EAPFA,aACAhC,EAME,EANFA,gBACAqB,EAKE,EALFA,gBACAC,EAIE,EAJFA,mBACAC,EAGE,EAHFA,SACAtB,EAEE,EAFFA,UACAmB,EACE,EADFA,aAsBA,OACI,kBAAC,EAAD,CACIrB,UAAWA,EACXC,gBAAiBA,EACjBqB,gBAAiBA,EACjBC,mBAAoBA,EACpBC,SAAUA,EACVtB,UAAWA,EACXmB,aAAcA,EACdO,UArBU,SAACM,GACf,GAAKA,EAAOC,YAAZ,CAGA,IAAMjD,EAZM,SAACkD,EAAMC,EAAYC,GAC/B,IAAMJ,EAASK,MAAMC,KAAKJ,GADkB,EAE1BF,EAAOO,OAAOJ,EAAY,GAArCK,EAFqC,oBAK5C,OAFAR,EAAOO,OAAOH,EAAU,EAAGI,GAEpBR,EAOOS,CACV3C,EACAkC,EAAOU,OAAOtC,MACd4B,EAAOC,YAAY7B,OAEvB2B,EAAa/C,QCVN2D,G,MAda,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YAAaxH,EAAU,EAAVA,IAClD,OACI,0BAAMH,UAAU,cAAcqB,SAAUqG,GACpC,+BACI,+CACA,2BAAOpG,KAAK,OAAOC,MAAOpB,EAAKqB,SAAUmG,KAE7C,4BAAQrG,KAAK,UACT,kBAAC,IAAD,CAAiB6C,KAAMyD,UCZxBC,ECCa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,aAAclD,EAA6B,EAA7BA,UAAWzE,EAAkB,EAAlBA,IAAK4H,EAAa,EAAbA,OAiCzD,OACI,kBAAC,EAAD,CACIJ,YAlCY,SAACvE,GACjB2E,EAAO3E,EAAEW,OAAOxC,QAkCZpB,IAAKA,EACLuH,SAhCS,SAACtE,GAGd,GAFAA,EAAEE,iBAEe,KAAbnD,EAAI6H,MAAgB7H,EAAxB,CAKA,IAAII,EAAU,IAEmB,IAA7BJ,EAAI8H,SAAS,YACb1H,EAAUJ,EAAI+H,MAAM,KAAK,GAAGA,MAAM,KAAK,IAET,IAAvB/H,EAAI8H,SAAS,MACpB1H,EAAUJ,GACoB,IAAvBA,EAAI8H,SAAS,QACpB1H,EAAUJ,EAAI+H,MAAM,MAAM,IAG1BtD,EAAU0B,MAAK,SAACrB,GAAD,OAAWA,EAAMnD,MAAQvB,KACxCC,MAAM,oEAIVsH,EAAavH,GACbwH,EAAO,UArBHvH,MAAM,oF,0CCVH,SAAS2H,EAAT,GAA2C,IAAvBnI,EAAsB,EAAtBA,UAAWoI,EAAW,EAAXA,QAC1C,OACI,0BAAMC,SAAQ,WAAMC,KAAKC,MAAMH,GAAjB,KAA8BpI,UAAWA,GAM/D,SAAgBoI,GACZ,IAAMI,EAAO,IAAIC,KAAe,IAAVL,GAChBM,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKC,EAAIP,EAAKQ,iBACpB,GAAIN,EACA,MAAM,GAAN,OAAUA,EAAV,YAAgBK,EAAIH,GAApB,YAA2BE,GAE/B,MAAM,GAAN,OAAUF,EAAV,YAAgBE,GAbPG,CAAOb,IAgBpB,SAASW,EAAIG,GACT,OAAQ,IAAMA,GAAQC,OAAO,G,kBC4GlBC,EAhHa,SAAC,GAmBtB,IAlBHlD,EAkBE,EAlBFA,gBACApB,EAiBE,EAjBFA,UACAuE,EAgBE,EAhBFA,KACAC,EAeE,EAfFA,OACAC,EAcE,EAdFA,eACAC,EAaE,EAbFA,OACAC,EAYE,EAZFA,WACAC,EAWE,EAXFA,eACAC,EAUE,EAVFA,OACAC,EASE,EATFA,iBACAC,EAQE,EARFA,kBACAC,EAOE,EAPFA,eACAC,EAME,EANFA,eACA/E,EAKE,EALFA,kBACAgF,EAIE,EAJFA,gBACAnE,EAGE,EAHFA,SACAoE,EAEE,EAFFA,WACAC,EACE,EADFA,mBAEA,OACI,yBAAKlK,UAAU,cACX,kBAAC,IAAD,CACIA,UAAU,SACVG,IAAG,0CAAqC+F,EAAgBpE,KACxDwH,OAAQD,EAAO,EAAIC,EACnBa,WAAYZ,EACZa,QAAStF,EACTpD,IAAK8H,EACLa,OAAQZ,EACRa,WAAYZ,IAEhB,yBAAK1J,UAAU,iBACX,kBAAC,IAAD,CACIuK,KAAM,KACNC,SAAU,EACVC,SAAU,QACVlJ,MAAOoI,EACPnI,SAAUoI,EACVc,iBAAkBb,KAG1B,yBAAK7J,UAAU,4BACX,4BACIsB,KAAK,SACLrB,QAAS,WACL6J,EAAe9E,KAGnB,kBAAC,IAAD,CAAiBb,KAAMwG,OAE3B,4BACIrJ,KAAK,SACLtB,UAAU,SACVC,QAAS+J,GAET,kBAAC,IAAD,CAAiB7F,KAAMW,EAAYa,IAAUD,OAEjD,4BACIpE,KAAK,SACLrB,QAAS,WACL8J,EAAe/E,KAGnB,kBAAC,IAAD,CAAiBb,KAAMyG,OAE3B,uBAAG5K,UAAU,gCACT,kBAACmI,EAAD,CAAUC,QAASvC,EAAW8D,IADlC,KAC+C,IAC3C,kBAACxB,EAAD,CAAUC,QAASvC,MAG3B,yBAAK7F,UAAU,sBACX,uBAAGA,UAAU,iCACT,yBACIE,IAAKgG,EAAgBT,UACrBrF,IAAK8F,EAAgBtG,SAG7B,yBAAKI,UAAU,4BACX,uBAAGA,UAAU,mCACRkG,EAAgBtG,OAErB,uBAAGI,UAAU,oCACRkG,EAAgBN,UAI7B,yBAAK5F,UAAU,6BACX,4BAAQsB,KAAK,SAAStB,UAAU,SAASC,QAASgK,GAC9C,kBAAC,IAAD,CACI9F,KACIkF,EACMwB,IACAvB,GAAU,GACVwB,IACAC,OAIlB,2BACIzJ,KAAK,QACL0J,IAAK,EACLC,IAAK,EACLV,KAAK,MACLhJ,MAAO+H,EACP9H,SAAU0I,OCzHfgB,ECCa,SAAC,GAOtB,IANHhF,EAME,EANFA,gBACAC,EAKE,EALFA,mBACAvB,EAIE,EAJFA,UACAwB,EAGE,EAHFA,SACAtB,EAEE,EAFFA,UACAmB,EACE,EADFA,aACE,EACsB5D,oBAAS,GAD/B,mBACKgH,EADL,KACW8B,EADX,OAE0B9I,mBAAS,IAFnC,mBAEKiH,EAFL,KAEa8B,EAFb,OAGsC/I,mBAAS,MAH/C,mBAGKgJ,EAHL,KAGmBC,EAHnB,OAI8BjJ,mBAAS,GAJvC,mBAIKwD,EAJL,KAIe0F,EAJf,OAK0BlJ,mBAAS,GALnC,mBAKKsH,EALL,KAKa6B,EALb,KAWIhC,EAASvI,mBAgBT+D,EAAoBJ,EAAUyB,WAChC,SAACxE,GAAD,OAAUA,EAAKC,MAAQoE,EAAgBpE,OAGrCiI,EAAiB,SAAC7E,GACpB,GAAIA,EAAQ,IAAMN,EAAUjD,OAGxB,OAFAsE,GAAa,QACbzF,MAAM,0CAGV4F,EAASxB,EAAUM,EAAQ,GAAGO,WAC9BU,EAAmBvB,EAAUM,EAAQ,IACrCe,GAAa,IA4CjB,OACI,kBAAC,EAAD,CACIC,gBAAiBA,EACjBpB,UAAWA,EACXuE,KAAMA,EACNC,OAAQA,EACRC,eAnFe,SAAC1D,GAEpB0F,EAAY1F,IAkFR2D,OAAQA,EACRC,WA1EW,aA2EXC,eAzEe,SAAC+B,GAEpBD,EAAUC,EAAM9B,QACK,IAAjB8B,EAAM9B,QACNI,EAAe/E,IAsEf2E,OAAQA,EACRC,iBArBiB,SAACrI,GACtBiK,EAAUE,WAAWnK,KAqBjBsI,kBAlBkB,SAACtI,GAEvBiI,EAAOrI,QAAQwK,OAAOD,WAAWnK,IACjC0E,GAAa,IAgBT6D,eAtDe,SAAC5E,GACpB,GAAIA,EAAQ,KAAO,EAGf,OAFAe,GAAa,QACbzF,MAAM,yEAGV4F,EAASxB,EAAUM,EAAQ,GAAGO,WAC9BU,EAAmBvB,EAAUM,EAAQ,IACrCe,GAAa,IA+CT8D,eAAgBA,EAChB/E,kBAAmBA,EACnBgF,gBAtFgB,WACpB/D,GAAcnB,IAsFVe,SAAUA,EACVoE,WAvCW,YACF,IAATZ,GACA8B,GAAS9B,GACTiC,EAAgBhC,GAChB8B,EAAU,KAEVD,GAAS9B,GACT+B,EAAUC,KAiCVnB,mBAjDmB,SAAC9G,GACxBgI,EAAUhI,EAAEW,OAAOxC,OACI,MAAnB6B,EAAEW,OAAOxC,MACT4J,GAAQ,GAERA,GAAQ,OC5DpBnH,IAAOC,SAEP,IAoDe2H,EApDC,SAAC,GAaV,IAZHtL,EAYE,EAZFA,aACAsE,EAWE,EAXFA,UACAiC,EAUE,EAVFA,aACAhC,EASE,EATFA,gBACAqB,EAQE,EARFA,gBACAC,EAOE,EAPFA,mBACA0F,EAME,EANFA,MACAzF,EAKE,EALFA,SACAtB,EAIE,EAJFA,UACAmB,EAGE,EAHFA,aACA9F,EAEE,EAFFA,IACA4H,EACE,EADFA,OAEA,OACI,yBAAK/H,UAAS,YACV,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKE,IAAK2L,EAAOzL,IAAG,UAAKyL,EAAL,cAG5B,yBAAK7L,UAAU,iBACX,kBAAC8L,EAAD,CACIhE,aAAcxH,EACdsE,UAAWA,EACXzE,IAAKA,EACL4H,OAAQA,IAGZ,kBAAC,EAAD,CACInD,UAAWA,EACXiC,aAAcA,EACdhC,gBAAiBA,EACjBqB,gBAAiBA,EACjBC,mBAAoBA,EACpBC,SAAUA,EACVtB,UAAWA,EACXmB,aAAcA,KAGtB,kBAAC8F,EAAD,CACI7F,gBAAiBA,EACjBC,mBAAoBA,EACpBvB,UAAWA,EACXwB,SAAUA,EACVtB,UAAWA,EACXmB,aAAcA,MCrD9BjC,IAAOC,SAEP,IAEa+H,EAAW,SAACjK,GAAD,OACpBwB,IAAMC,IAAN,0DACuDzB,EADvD,gBAHWa,0CAGX,oDCRSqJ,EAAgB,CACzB,CACIC,KAAM,CACFC,KAAM,eACNnF,KAAM,CACF,CACIlH,GAAI,cACJF,MAAO,yDACPgG,OAAQ,oBACR9D,IAAK,cACLnC,OAAQ,iDACR8F,UACI,uDACJI,SAAU,SAEd,CACI/F,GAAI,cACJF,MAAO,+DACPgG,OAAQ,oBACR9D,IAAK,cACLnC,OAAQ,iDACR8F,UACI,uDACJI,SAAU,SAEd,CACI/F,GAAI,cACJF,MAAO,0DACPgG,OAAQ,oBACR9D,IAAK,cACLnC,OAAQ,iDACR8F,UACI,uDACJI,SAAU,a,iBC0EfuG,MAjGf,WACI,IAAMC,EAAmBC,aAAaC,QAAQ,iBACxCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChCN,EAAc,GAAGC,KAAKlF,KAHjB,EAIuB3E,mBAASgK,GAJhC,mBAIJzH,EAJI,KAIOiC,EAJP,OAKmCxE,mBAASuC,EAAU,IALtD,mBAKJsB,EALI,KAKaC,EALb,OAMe9D,mBAASuC,EAAU,GAAGa,WANrC,mBAMJoG,EANI,KAMGzF,EANH,OAOuB/D,oBAAS,GAPhC,mBAOJyC,EAPI,KAOOmB,EAPP,OAQW5D,mBAAS,IARpB,mBAQJlC,EARI,KAQC4H,EARD,KAUX7G,qBAAU,WACNoL,aAAaI,QAAQ,gBAAiBF,KAAKG,UAAU/H,MACtD,CAACA,IAEJ,IAAMgI,EAAW,SAAC3H,GACd,IAAI4H,EAAejI,EAAUkI,OAAO7H,GACpC4B,EAAagG,IAGXvM,EAAY,uCAAG,WAAOyB,GAAP,yBAAAsB,EAAA,+EAEO2I,EAASjK,GAFhB,UAEPgL,EAFO,OAGbrJ,QAAQC,IAAIoJ,KACS,MAAjBA,EAAMlJ,QAAkBkJ,EAAMnJ,KAAKE,MAAMnC,QAAU,GAJ1C,wBAKHsD,EAAQ,CACVnF,GAAI,GACJF,MAAO,GACPgG,OAAQ,GACR9D,IAAK,GACLnC,OAAQ,GACR8F,UAAW,GACXI,SAAU,IAGN/F,EAAOiN,EAAMnJ,KAAKE,MAAM,GAAxBhE,GACAkC,EAAY+K,EAAMnJ,KAAKE,MAAM,GAA7B9B,QACAgL,EAAmBD,EAAMnJ,KAAKE,MAAM,GAApCkJ,eACA/K,EAAeD,EAAfC,WAERgD,EAAMrF,MAAQoC,EAAQpC,MACtBqF,EAAMW,OAAS5D,EAAQG,aACvB8C,EAAMnD,IAAMhC,EACZmF,EAAMnF,IAAK,IAAI2I,MAAOwE,UACtBhI,EAAMY,SAAWqH,IAAgBF,EAAenH,UAChDZ,EAAMtF,OAASsC,EAAWC,QAAQ/B,IAClC8E,EAAMQ,UAAYxD,EAAWkL,OACvBlL,EAAWkL,OAAOhN,IAClB8B,EAAWmL,SACXnL,EAAWmL,SAASjN,IACpB8B,EAAWoL,KACXpL,EAAWoL,KAAKlN,IAChB8B,EAAWqL,OACXrL,EAAWqL,OAAOnN,IAClB8B,EAAWC,QAAQ/B,IAEzBuD,QAAQC,IAAIiB,GApCH,kBAsCFgI,EAAS3H,IAtCP,0DA0CbvB,QAAQ6J,MAAR,MA1Ca,0DAAH,sDAyDlB,OACI,oCACI,kBAAC,EAAD,CAAQjN,aAAcA,EAAcyH,OAAQA,IAC5C,kBAAC,EAAD,CACIzH,aAAcA,EACdsE,UAAWA,EACXiC,aAAcA,EACdhC,gBAlBY,SAAC2I,GACrB,GAAyB,IAArB5I,EAAUjD,OAAd,CAIA,IAAM8L,EAAc7I,EAAU8I,QAC1B,SAACzI,GAAD,OAAWA,EAAMnD,MAAQ0L,KAE7B3G,EAAa4G,QANTjN,MAAM,sJAiBF0F,gBAAiBA,EACjBC,mBAAoBA,EACpB0F,MAAOA,EACPzF,SAAUA,EACVtB,UAAWA,EACXmB,aAAcA,EACd9F,IAAKA,EACL4H,OAAQA,MChGxB4F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b7a56918.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst SearchMusicItemPresenter = ({\r\n    jacket, // 손자\r\n    title, // 손자\r\n    artist, // 손자\r\n    id, // 손자\r\n    addSearchItem,\r\n}) => {\r\n    return (\r\n        <div\r\n            className=\"search-music-item\"\r\n            onClick={() => {\r\n                addSearchItem(id);\r\n            }}\r\n        >\r\n            <p className=\"search-music-item--thumbnail\">\r\n                <img src={jacket.url} alt={title} />\r\n            </p>\r\n            <div className=\"search-music-item--info\">\r\n                <p className=\"search-music-item--info__title\">{title}</p>\r\n                <p className=\"search-music-item--info__artist\">{artist}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchMusicItemPresenter;\r\n","import SearchMusicItemContainer from \"./SearchMusicItemContainer\";\r\n\r\nexport default SearchMusicItemContainer;\r\n","import React from \"react\";\r\nimport SearchMusicItemPresenter from \"./SearchMusicItemPresenter\";\r\n\r\nconst SearchMusicItem = ({ jacket, title, artist, id, getMovieInfo }) => {\r\n    const addSearchItem = (videoID) => {\r\n        alert(videoID);\r\n        getMovieInfo(videoID);\r\n    };\r\n\r\n    return (\r\n        <SearchMusicItemPresenter\r\n            jacket={jacket} // 손자\r\n            title={title} // 손자\r\n            artist={artist} // 손자\r\n            id={id} // 손자\r\n            addSearchItem={addSearchItem}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchMusicItem;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport SearchMusicItem from \"../SearchMusicItem\";\r\nimport \"./style.scss\";\r\n\r\nconst SearchMusicPresenter = ({\r\n    getMovieInfo, // 손자\r\n    onSubmitSearch,\r\n    searchValue,\r\n    onChangeSearch,\r\n    searchList,\r\n    openSearch,\r\n    isSearch,\r\n}) => {\r\n    const searchInput = useRef(null);\r\n    useEffect(() => {\r\n        openSearch && searchInput.current.focus();\r\n    }, [openSearch, isSearch]);\r\n    return (\r\n        <div className=\"search-area\">\r\n            <div className=\"search-area--search\">\r\n                <form onSubmit={onSubmitSearch}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchValue}\r\n                        onChange={onChangeSearch}\r\n                        placeholder=\"검색\"\r\n                        ref={searchInput}\r\n                    />\r\n                    <button type=\"submit\"></button>\r\n                </form>\r\n            </div>\r\n            {isSearch && (\r\n                <div className=\"search-area--result\">\r\n                    {searchList.length !== 0 ? (\r\n                        searchList.map((item) => (\r\n                            <SearchMusicItem\r\n                                key={item.id.videoId}\r\n                                id={item.id.videoId}\r\n                                jacket={item.snippet.thumbnails.default}\r\n                                title={item.snippet.title}\r\n                                artist={item.snippet.channelTitle}\r\n                                getMovieInfo={getMovieInfo}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"nothing\">검색결과가 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchMusicPresenter;\r\n","import SearchMusicContainer from \"./SearchMusicContainer\";\r\n\r\nexport default SearchMusicContainer;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.scss\";\r\nimport SearchMusicPresenter from \"./SearchMusicPresenter\";\r\n\r\nconst SearchMusicContainer = ({ getMovieInfo, openSearch }) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [isSearch, setIsSearch] = useState(true);\r\n    // const [trySearching, setTrySearching] = useState(false);\r\n\r\n    const optionParams = {\r\n        q: searchValue,\r\n        part: \"snippet\",\r\n        key: process.env.REACT_APP_APIKEY,\r\n        type: \"video\",\r\n        maxResults: 10,\r\n        regionCode: \"KR\",\r\n        videoDuration: \"short\",\r\n    };\r\n\r\n    //한글을 검색어로 전달하기 위해선 url encoding 필요!\r\n    optionParams.q = encodeURI(optionParams.q);\r\n\r\n    let searchUrl = \"https://www.googleapis.com/youtube/v3/search?\";\r\n    for (var option in optionParams) {\r\n        searchUrl += option + \"=\" + optionParams[option] + \"&\";\r\n    }\r\n\r\n    //searchUrl의마지막에 붙어있는 & 정리\r\n    searchUrl = searchUrl.substr(0, searchUrl.length - 1);\r\n\r\n    const onChangeSearch = (e) => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    const onSubmitSearch = async (e) => {\r\n        e.preventDefault();\r\n        if (searchValue === \"\") {\r\n            alert(\"검색값을 입력해주세요.\");\r\n            return;\r\n        }\r\n        try {\r\n            const searchResult = await axios.get(searchUrl);\r\n            console.log(searchResult.data);\r\n            // setTrySearching(true);\r\n            if (searchResult.status === 200) {\r\n                setSearchList(searchResult.data.items);\r\n            }\r\n            setIsSearch(true);\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchMusicPresenter\r\n            getMovieInfo={getMovieInfo} // 손자\r\n            onSubmitSearch={onSubmitSearch}\r\n            searchValue={searchValue}\r\n            onChangeSearch={onChangeSearch}\r\n            searchList={searchList}\r\n            openSearch={openSearch}\r\n            isSearch={isSearch}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchMusicContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport { faGithub, faProductHunt } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSearch, faBlog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./style.scss\";\r\nimport SearchMusic from \"../SearchMusic\";\r\n\r\ndotenv.config();\r\n\r\nconst Header = ({ getMovieInfo }) => {\r\n    const searchInput = useRef(null);\r\n    const [openSearch, setOpenSearch] = useState(false);\r\n\r\n    return (\r\n        <header>\r\n            <h1 className=\"logo\">\r\n                <img src=\"/youtube-music-player/images/logo.svg\" alt=\"로고\" />\r\n            </h1>\r\n            <nav className=\"menu\">\r\n                <ul>\r\n                    <li>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                // setOpenSearch(!openSearch);\r\n                                alert(\"준비중입니다.\");\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                            &nbsp; 검색하기\r\n                        </button>\r\n                        {openSearch && (\r\n                            <SearchMusic\r\n                                getMovieInfo={getMovieInfo}\r\n                                openSearch={openSearch}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"link-list\">\r\n                <a\r\n                    href=\"https://github.com/ddock4you/youtube-music-player\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </a>\r\n                <a\r\n                    href=\"https://ddock4you.netlify.app/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faBlog} />\r\n                </a>\r\n                <a\r\n                    href=\"http://ddock4you.ivyro.net/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <FontAwesomeIcon icon={faProductHunt} />\r\n                </a>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import HeaderPresenter from \"./HeaderPresenter\";\r\n\r\nexport default HeaderPresenter;\r\n","import React from \"react\";\r\nimport { faPlay, faPause, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst MusicPresenter = ({\r\n    musicList,\r\n    deleteMusicList,\r\n    isPlaying,\r\n    clickPlayMusic,\r\n    playingMusicIndex,\r\n}) => {\r\n    return (\r\n        <>\r\n            {musicList.map((music, index) => (\r\n                <Draggable\r\n                    key={music.id}\r\n                    index={index}\r\n                    draggableId={String(music.id)}\r\n                >\r\n                    {(provided) => (\r\n                        <div\r\n                            className={\r\n                                \"music \" +\r\n                                (index === playingMusicIndex && isPlaying\r\n                                    ? \"playing\"\r\n                                    : index === playingMusicIndex && !isPlaying\r\n                                    ? \"stop\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => {\r\n                                clickPlayMusic(music.key);\r\n                            }}\r\n                            key={music.id}\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                        >\r\n                            <div className=\"music--jacket\">\r\n                                <p>\r\n                                    <img\r\n                                        src={music.bigJacket}\r\n                                        alt={music.title}\r\n                                    />\r\n                                    {isPlaying ? (\r\n                                        <FontAwesomeIcon icon={faPlay} />\r\n                                    ) : (\r\n                                        <FontAwesomeIcon icon={faPause} />\r\n                                    )}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"music--info\">\r\n                                <div className=\"music--info__title\">\r\n                                    {music.title}\r\n                                </div>\r\n                                <div className=\"music--info__singer\">\r\n                                    {music.singer}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"music--duration\">\r\n                                {music.duration}\r\n                            </div>\r\n                            <div className=\"music--remove\">\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        deleteMusicList(music.key);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Draggable>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MusicPresenter;\r\n","import MusicContainer from \"./MusicContainer\";\r\n\r\nexport default MusicContainer;\r\n","import React from \"react\";\r\nimport MusicPresenter from \"./MusicPresenter\";\r\n\r\nconst MusicContainer = ({\r\n    musicList,\r\n    deleteMusicList,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    setCover,\r\n}) => {\r\n    const clickPlayMusic = (key) => {\r\n        setNowPlayingMusic(musicList.find((item) => item.key === key));\r\n        setCover(musicList.find((item) => item.key === key).bigJacket);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const playingMusicIndex = musicList.findIndex(\r\n        (item) => item.key === nowPlayingMusic.key\r\n    );\r\n\r\n    return (\r\n        <MusicPresenter\r\n            musicList={musicList}\r\n            deleteMusicList={deleteMusicList}\r\n            isPlaying={isPlaying}\r\n            clickPlayMusic={clickPlayMusic}\r\n            playingMusicIndex={playingMusicIndex}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MusicContainer;\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Music from \"../Music\";\r\nimport \"./style.scss\";\r\n\r\nconst MusicListPresenter = ({\r\n    musicList, // 손자Props\r\n    deleteMusicList, //손자Props\r\n    nowPlayingMusic, // 손자Props\r\n    setNowPlayingMusic, // 손자Props\r\n    setCover, // 손자Props\r\n    isPlaying, // 손자Props\r\n    setIsPlaying, // 손자Props\r\n    onDragEnd,\r\n}) => {\r\n    return (\r\n        <div className=\"music-list\">\r\n            <p className=\"music-list--title\">기본목록</p>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided) => (\r\n                        <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            className=\"music-list--area\"\r\n                        >\r\n                            <Music\r\n                                musicList={musicList}\r\n                                deleteMusicList={deleteMusicList}\r\n                                isPlaying={isPlaying}\r\n                                setIsPlaying={setIsPlaying}\r\n                                nowPlayingMusic={nowPlayingMusic}\r\n                                setNowPlayingMusic={setNowPlayingMusic}\r\n                                setCover={setCover}\r\n                            />\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicListPresenter;\r\n","import MusicListContainer from \"./MusicListContainer\";\r\n\r\nexport default MusicListContainer;\r\n","import React from \"react\";\r\nimport MusicListPresenter from \"./MusicListPresenter\";\r\n\r\nconst MusicList = ({\r\n    musicList,\r\n    setMusicList,\r\n    deleteMusicList,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying,\r\n}) => {\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        const items = reorder(\r\n            musicList,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n        setMusicList(items);\r\n    };\r\n\r\n    return (\r\n        <MusicListPresenter\r\n            musicList={musicList} // 손자Props\r\n            deleteMusicList={deleteMusicList} // 손자Props\r\n            nowPlayingMusic={nowPlayingMusic} // 손자Props\r\n            setNowPlayingMusic={setNowPlayingMusic} // 손자Props\r\n            setCover={setCover} // 손자Props\r\n            isPlaying={isPlaying} //손자Props\r\n            setIsPlaying={setIsPlaying} // 손자Props\r\n            onDragEnd={onDragEnd}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MusicList;\r\n","import React from \"react\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InputMusicPresenter = ({ inputUrl, onChangeUrl, url }) => {\r\n    return (\r\n        <form className=\"music-input\" onSubmit={inputUrl}>\r\n            <label>\r\n                <span>YouTube URL :</span>\r\n                <input type=\"text\" value={url} onChange={onChangeUrl} />\r\n            </label>\r\n            <button type=\"submit\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default InputMusicPresenter;\r\n","import InputMusicContainer from \"./InputMusicContainer\";\r\n\r\nexport default InputMusicContainer;\r\n","import React from \"react\";\r\nimport InputMusicPresenter from \"./InputMusicPresenter\";\r\n\r\nconst InputMusicContainer = ({ getMovieinfo, musicList, url, setUrl }) => {\r\n    const onChangeUrl = (e) => {\r\n        setUrl(e.target.value);\r\n    };\r\n\r\n    const inputUrl = (e) => {\r\n        e.preventDefault();\r\n        // console.log(url);\r\n        if (url.trim === \"\" && !url) {\r\n            alert(\"YouTube URL이나 Video ID를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let videoID = \"\";\r\n        // youtube 메뉴 중 '동영상 URL 복사'를 통해 URL를 얻어서 입력했을 경우\r\n        if (url.includes(\"youtu.be\") === true) {\r\n            videoID = url.split(\"/\")[3].split(\"?\")[0];\r\n            // 일반 URL을 복사해서 입력했을 경우\r\n        } else if (url.includes(\"v=\") === false) {\r\n            videoID = url;\r\n        } else if (url.includes(\"v=\") === true) {\r\n            videoID = url.split(\"v=\")[1];\r\n        }\r\n\r\n        if (musicList.find((music) => music.key === videoID)) {\r\n            alert(\"이미 등록된 음악입니다.\");\r\n            return;\r\n        }\r\n\r\n        getMovieinfo(videoID);\r\n        setUrl(\"\");\r\n    };\r\n\r\n    return (\r\n        <InputMusicPresenter\r\n            onChangeUrl={onChangeUrl}\r\n            url={url}\r\n            inputUrl={inputUrl}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputMusicContainer;\r\n","import React from \"react\";\r\n\r\nexport default function Duration({ className, seconds }) {\r\n    return (\r\n        <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n            {format(seconds)}\r\n        </time>\r\n    );\r\n}\r\n\r\nfunction format(seconds) {\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = pad(date.getUTCSeconds());\r\n    if (hh) {\r\n        return `${hh}:${pad(mm)}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n}\r\n\r\nfunction pad(string) {\r\n    return (\"0\" + string).slice(-2);\r\n}\r\n","import React from \"react\";\r\nimport YouTube from \"react-player\";\r\nimport InputRange from \"react-input-range\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faStepForward,\r\n    faBackward,\r\n    faPlay,\r\n    faPause,\r\n    faVolumeMute,\r\n    faVolumeUp,\r\n    faVolumeDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Duration from \"../../lib/Duration\";\r\n\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport \"./style.scss\";\r\n\r\nconst NowPlayingPresenter = ({\r\n    nowPlayingMusic,\r\n    isPlaying,\r\n    mute,\r\n    volume,\r\n    handleDuration,\r\n    player,\r\n    handlePlay,\r\n    handleProgress,\r\n    played,\r\n    handleSeekChange,\r\n    handleSeekMouseUp,\r\n    handlePrevPlay,\r\n    handleNextPlay,\r\n    playingMusicIndex,\r\n    handlePlayMusic,\r\n    duration,\r\n    handleMute,\r\n    handleVolumeChange,\r\n}) => {\r\n    return (\r\n        <div className=\"nowplaying\">\r\n            <YouTube\r\n                className=\"hidden\"\r\n                url={`https://www.youtube.com/watch?v=${nowPlayingMusic.key}`}\r\n                volume={mute ? 0 : volume}\r\n                onDuration={handleDuration}\r\n                playing={isPlaying}\r\n                ref={player}\r\n                onPlay={handlePlay}\r\n                onProgress={handleProgress}\r\n            />\r\n            <div className=\"duration--bar\">\r\n                <InputRange\r\n                    step={0.000001}\r\n                    minValue={0}\r\n                    maxValue={0.999999}\r\n                    value={played}\r\n                    onChange={handleSeekChange}\r\n                    onChangeComplete={handleSeekMouseUp}\r\n                />\r\n            </div>\r\n            <div className=\"nowplaying--left-control\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        handlePrevPlay(playingMusicIndex);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faBackward} />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"center\"\r\n                    onClick={handlePlayMusic}\r\n                >\r\n                    <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        handleNextPlay(playingMusicIndex);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </button>\r\n                <p className=\"nowplaying-content--duration\">\r\n                    <Duration seconds={duration * played} /> /{\" \"}\r\n                    <Duration seconds={duration} />\r\n                </p>\r\n            </div>\r\n            <div className=\"nowplaying-content\">\r\n                <p className=\"nowplaying-content--thumbnail\">\r\n                    <img\r\n                        src={nowPlayingMusic.bigJacket}\r\n                        alt={nowPlayingMusic.title}\r\n                    />\r\n                </p>\r\n                <div className=\"nowplaying-content--info\">\r\n                    <p className=\"nowplaying-content--info__title\">\r\n                        {nowPlayingMusic.title}\r\n                    </p>\r\n                    <p className=\"nowplaying-content--info__artist\">\r\n                        {nowPlayingMusic.singer}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"nowplaying--right-control\">\r\n                <button type=\"button\" className=\"volume\" onClick={handleMute}>\r\n                    <FontAwesomeIcon\r\n                        icon={\r\n                            mute\r\n                                ? faVolumeMute\r\n                                : volume >= 0.5\r\n                                ? faVolumeUp\r\n                                : faVolumeDown\r\n                        }\r\n                    />\r\n                </button>\r\n                <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={1}\r\n                    step=\"0.1\"\r\n                    value={volume}\r\n                    onChange={handleVolumeChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NowPlayingPresenter;\r\n","import NowPlayingContainer from \"./NowPlayingContainer\";\r\n\r\nexport default NowPlayingContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport NowPlayingPresenter from \"./NowPlayingPresenter\";\r\n\r\nconst NowPlayingContainer = ({\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    musicList,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying,\r\n}) => {\r\n    const [mute, setMute] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [beforeVolume, setBeforeVolume] = useState(null);\r\n    const [duration, setDuration] = useState(0);\r\n    const [played, setPlayed] = useState(0);\r\n    const handleDuration = (duration) => {\r\n        // console.log(\"onDuration\", duration);\r\n        setDuration(duration);\r\n    };\r\n\r\n    const player = useRef();\r\n\r\n    const handlePlayMusic = () => {\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n\r\n    const handlePlay = () => {};\r\n\r\n    const handleProgress = (state) => {\r\n        // console.log(\"onProgress\", state.played);\r\n        setPlayed(state.played);\r\n        if (state.played === 1) {\r\n            handleNextPlay(playingMusicIndex);\r\n        }\r\n    };\r\n\r\n    const playingMusicIndex = musicList.findIndex(\r\n        (item) => item.key === nowPlayingMusic.key\r\n    );\r\n\r\n    const handleNextPlay = (index) => {\r\n        if (index + 1 === musicList.length) {\r\n            setIsPlaying(false);\r\n            alert(\"끝 부분입니다.\");\r\n            return;\r\n        }\r\n        setCover(musicList[index + 1].bigJacket);\r\n        setNowPlayingMusic(musicList[index + 1]);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const handlePrevPlay = (index) => {\r\n        if (index - 1 === -1) {\r\n            setIsPlaying(false);\r\n            alert(\"처음 시작되는 부분입니다.\");\r\n            return;\r\n        }\r\n        setCover(musicList[index - 1].bigJacket);\r\n        setNowPlayingMusic(musicList[index - 1]);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const handleVolumeChange = (e) => {\r\n        setVolume(e.target.value);\r\n        if (e.target.value === \"0\") {\r\n            setMute(true);\r\n        } else {\r\n            setMute(false);\r\n        }\r\n    };\r\n\r\n    const handleMute = () => {\r\n        if (mute === false) {\r\n            setMute(!mute);\r\n            setBeforeVolume(volume);\r\n            setVolume(0);\r\n        } else {\r\n            setMute(!mute);\r\n            setVolume(beforeVolume);\r\n        }\r\n    };\r\n\r\n    const handleSeekChange = (value) => {\r\n        setPlayed(parseFloat(value));\r\n    };\r\n\r\n    const handleSeekMouseUp = (value) => {\r\n        // this.setState({ seeking: false })\r\n        player.current.seekTo(parseFloat(value));\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    return (\r\n        <NowPlayingPresenter\r\n            nowPlayingMusic={nowPlayingMusic}\r\n            isPlaying={isPlaying}\r\n            mute={mute}\r\n            volume={volume}\r\n            handleDuration={handleDuration}\r\n            player={player}\r\n            handlePlay={handlePlay}\r\n            handleProgress={handleProgress}\r\n            played={played}\r\n            handleSeekChange={handleSeekChange}\r\n            handleSeekMouseUp={handleSeekMouseUp}\r\n            handlePrevPlay={handlePrevPlay}\r\n            handleNextPlay={handleNextPlay}\r\n            playingMusicIndex={playingMusicIndex}\r\n            handlePlayMusic={handlePlayMusic}\r\n            duration={duration}\r\n            handleMute={handleMute}\r\n            handleVolumeChange={handleVolumeChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NowPlayingContainer;\r\n","import React from \"react\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport MusicList from \"../../components/MusicList\";\r\nimport InputMusic from \"../../components/InputMusic\";\r\nimport \"./style.scss\";\r\nimport NowPlaying from \"../../components/NowPlaying\";\r\n\r\ndotenv.config();\r\n\r\nconst NowList = ({\r\n    getMovieInfo,\r\n    musicList,\r\n    setMusicList,\r\n    deleteMusicList,\r\n    nowPlayingMusic,\r\n    setNowPlayingMusic,\r\n    cover,\r\n    setCover,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    url,\r\n    setUrl,\r\n}) => {\r\n    return (\r\n        <div className={`now-list`}>\r\n            <div className=\"cover\">\r\n                <div className=\"cover-img\">\r\n                    <img src={cover} alt={`${cover} cover`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"music-content\">\r\n                <InputMusic\r\n                    getMovieinfo={getMovieInfo}\r\n                    musicList={musicList}\r\n                    url={url}\r\n                    setUrl={setUrl}\r\n                    // onChangeUrl={onChangeUrl}\r\n                />\r\n                <MusicList\r\n                    musicList={musicList}\r\n                    setMusicList={setMusicList}\r\n                    deleteMusicList={deleteMusicList}\r\n                    nowPlayingMusic={nowPlayingMusic}\r\n                    setNowPlayingMusic={setNowPlayingMusic}\r\n                    setCover={setCover}\r\n                    isPlaying={isPlaying}\r\n                    setIsPlaying={setIsPlaying}\r\n                />\r\n            </div>\r\n            <NowPlaying\r\n                nowPlayingMusic={nowPlayingMusic}\r\n                setNowPlayingMusic={setNowPlayingMusic}\r\n                musicList={musicList}\r\n                setCover={setCover}\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NowList;\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst APIKEY = process.env.REACT_APP_APIKEY;\r\n\r\nexport const getVideo = (videoId) =>\r\n    axios.get(\r\n        `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${APIKEY}&part=snippet,contentDetails,statistics,status`\r\n    );\r\n","export const MusicListData = [\r\n    {\r\n        base: {\r\n            name: \"기본\",\r\n            list: [\r\n                {\r\n                    id: 1585749814658,\r\n                    title: \"dokiwa. (from dosii) - 샴푸의 요정\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"_XSVrRK205Q\",\r\n                    jacket: \"https://i.ytimg.com/vi/_XSVrRK205Q/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/_XSVrRK205Q/maxresdefault.jpg\",\r\n                    duration: \"03:31\",\r\n                },\r\n                {\r\n                    id: 1585749885524,\r\n                    title: \"roon - 추억 속 너에게 (Prod. KARXHE)\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"wJuNJS9_b7A\",\r\n                    jacket: \"https://i.ytimg.com/vi/wJuNJS9_b7A/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/wJuNJS9_b7A/maxresdefault.jpg\",\r\n                    duration: \"03:08\",\r\n                },\r\n                {\r\n                    id: 1585749892614,\r\n                    title: \"민민(minmin) - 차근차근(Slowly)\",\r\n                    singer: \"Mellowbeat Seeker\",\r\n                    key: \"4zAZfAukW8g\",\r\n                    jacket: \"https://i.ytimg.com/vi/4zAZfAukW8g/default.jpg\",\r\n                    bigJacket:\r\n                        \"https://i.ytimg.com/vi/4zAZfAukW8g/maxresdefault.jpg\",\r\n                    duration: \"03:01\",\r\n                },\r\n            ],\r\n        },\r\n    },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport NowList from \"../Routes/NowList\";\r\nimport { getVideo } from \"../lib/api\";\r\n\r\nimport { MusicListData } from \"../modules/defaultMusicListData\";\r\nimport youtubeDuration from \"youtube-duration-format\";\r\nimport \"../scss/reset.scss\";\r\n\r\nfunction App() {\r\n    const storageMusicList = localStorage.getItem(\"localPlayList\")\r\n        ? JSON.parse(localStorage.getItem(\"localPlayList\"))\r\n        : MusicListData[0].base.list;\r\n    const [musicList, setMusicList] = useState(storageMusicList);\r\n    const [nowPlayingMusic, setNowPlayingMusic] = useState(musicList[0]);\r\n    const [cover, setCover] = useState(musicList[0].bigJacket);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"localPlayList\", JSON.stringify(musicList));\r\n    }, [musicList]);\r\n\r\n    const addMusic = (music) => {\r\n        let addMusicList = musicList.concat(music);\r\n        setMusicList(addMusicList);\r\n    };\r\n\r\n    const getMovieInfo = async (videoId) => {\r\n        try {\r\n            const video = await getVideo(videoId);\r\n            console.log(video);\r\n            if (video.status === 200 && video.data.items.length >= 1) {\r\n                const music = {\r\n                    id: \"\",\r\n                    title: \"\",\r\n                    singer: \"\",\r\n                    key: \"\",\r\n                    jacket: \"\",\r\n                    bigJacket: \"\",\r\n                    duration: \"\",\r\n                };\r\n\r\n                const { id } = video.data.items[0];\r\n                const { snippet } = video.data.items[0];\r\n                const { contentDetails } = video.data.items[0];\r\n                const { thumbnails } = snippet;\r\n\r\n                music.title = snippet.title;\r\n                music.singer = snippet.channelTitle;\r\n                music.key = id;\r\n                music.id = new Date().valueOf();\r\n                music.duration = youtubeDuration(contentDetails.duration);\r\n                music.jacket = thumbnails.default.url;\r\n                music.bigJacket = thumbnails.maxres\r\n                    ? thumbnails.maxres.url\r\n                    : thumbnails.standard\r\n                    ? thumbnails.standard.url\r\n                    : thumbnails.high\r\n                    ? thumbnails.high.url\r\n                    : thumbnails.medium\r\n                    ? thumbnails.medium.url\r\n                    : thumbnails.default.url;\r\n\r\n                console.log(musicList);\r\n\r\n                return addMusic(music);\r\n            }\r\n            // return console.log(video);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const deleteMusicList = (selectedMusic) => {\r\n        if (musicList.length === 1) {\r\n            alert(\"플레이리스트에 최소 하나 이상의 음악이 있어야 합니다.\");\r\n            return;\r\n        }\r\n        const deleteMusic = musicList.filter(\r\n            (music) => music.key !== selectedMusic\r\n        );\r\n        setMusicList(deleteMusic);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header getMovieInfo={getMovieInfo} setUrl={setUrl} />\r\n            <NowList\r\n                getMovieInfo={getMovieInfo}\r\n                musicList={musicList}\r\n                setMusicList={setMusicList}\r\n                deleteMusicList={deleteMusicList}\r\n                nowPlayingMusic={nowPlayingMusic}\r\n                setNowPlayingMusic={setNowPlayingMusic}\r\n                cover={cover}\r\n                setCover={setCover}\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/reset.scss\";\r\nimport App from \"./components/AppLayout\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}